name: minor-packages-workflow 
 
on:
  schedule: 
    - cron: "0 13 * * *" 
  push:  
    branches: [ 'github-workflow' ] 
  workflow_run:  
    workflows: "Create Artifacts and pass runid" 
    branches: [ 'github-workflow' ]
    types: 
      - completed
  workflow_dispatch:
env:
  RUN_ID: ${{ github.run_id }}
  BUILD_BRANCH: '5.2.0'
  BUILD_TYPE: 'FULL'

jobs: 

  build-minor-packages:
     strategy:
      matrix:
          #os: [  'ol8', 'el9', 'd11', 'd12', 'u20', 'u22'  ]
          os: [ 'u20' ] 
     runs-on: ubuntu-latest

     steps:

        - name: Check if triggered by cron
          if: ${{ github.event_name == 'schedule' }}
          run: echo "This was triggered by the cron schedule."

        - name: Check if triggered by push
          if: ${{ github.event_name == 'push' }}
          run: echo "This was triggered by a push event."
          
        - name: Capture start date and time
          id: start_time
          run: echo "start_time=$(date -u)" >> $GITHUB_ENV

        - name: Check out Repo
          uses: actions/checkout@v4
          with:
           ref: ${{ env.BUILD_BRANCH }}

        - name: Fetch build_vars.json from projects
          env:
             github-token: ${{ secrets.GIT_ACTIONS }}
          run: |
            git clone https://github.com/cs1867/project.git project
            cp project/toolbox/workflows/build_vars.json .
             
        - name: Add start time to build_vars.json
          run: |
            jq '.buildstats += { "OS": "${{ matrix.os }}", "BUILD_BRANCH": "${{ env.BUILD_BRANCH }}", "BUILD_TYPE": "${{ env.BUILD_TYPE }}", "start_time": "${{ env.start_time }}", "${{ github.event.repository.name }}-start": "${{ env.start_time }}" }' build_vars.json > updated_build_vars.json
            mv updated_build_vars.json build_vars.json
            
        - name: Display build_vars.json
          run: cat build_vars.json

        - name: run docker oneshot builder
          run: |
           echo " run the oneshot"
           curl -s https://raw.githubusercontent.com/perfsonar/docker-oneshot-builder/main/build | sh -s - . '${{ matrix.os }}'
 
        - uses: actions/upload-artifact@v3
          with:
            name: ${{ github.event.repository.name }}-${{ matrix.os }}
            path: unibuild-repo
            retention-days: 5

        - name: update build_vars.json
          run: |
           jq 'del(.repos[0])' build_vars.json > tmp.json
           mv tmp.json  build_vars.json
           jq --arg run_id "${{ github.run_id }}" '.buildids += { "minor-packages": $run_id }'  build_vars.json  > tmp.json
           mv tmp.json  build_vars.json
           
        - name: Extract repo name
          id: extract_repo_name
          run: |
            jq -r '.repos[0].name' build_vars.json
            NEXTREPO=$(jq -r '.repos[0].name' build_vars.json )
            echo "NEXTREPO=${NEXTREPO}" >> $GITHUB_ENV
            
        - name: Capture start end and time
          id: end_time
          run: echo "end_time=$(date -u)" >> $GITHUB_ENV

        - name: Add end time to build_vars.json
          run: |
            jq '.buildstats += {"${{ github.event.repository.name }}-end": "${{ env.end_time }}"}' build_vars.json > updated_build_vars.json
            mv updated_build_vars.json build_vars.json
        - name: Display build_vars.json
          run: jq .buildstats build_vars.json

        - name: Set build_vars.json as workflow variable
          id: set_build_vars
          run: |
           BUILD_VARS_JSON=$(jq -c . build_vars.json)
           echo "BUILD_VARS_JSON=${BUILD_VARS_JSON}" >> $GITHUB_ENV
           echo "BUILD_VARS_JSON=${BUILD_VARS_JSON}"
           
        - name: Pass Workflow
          if: env.BUILD_TYPE == 'FULL'
          uses: actions/github-script@v6
          with:
           github-token: ${{ secrets.GIT_ACTIONS }}
           script: |
             await github.rest.actions.createWorkflowDispatch({
               owner: 'cs1867',
               repo:  '${{ env.NEXTREPO}}',
               workflow_id: '${{ env.NEXTREPO }}-workflow.yml',
               ref: 'github-workflow',
              inputs: {
                 BUILD_VARS_JSON: '${{ env.BUILD_VARS_JSON}}'
               }
             })
