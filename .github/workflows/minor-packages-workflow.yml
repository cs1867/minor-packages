name: minor-packages-workflow

on:
  workflow_dispatch: 
    inputs: 
      BUILD_VARS_JSON:
        description: 'Build var json file'
        required: true      
  workflow_run:
    workflows: "Create Artifacts and pass runid"
    branches: 'github-workflow'
    types:
      - completed

jobs:
       
  build-minor-packages:

     runs-on: ubuntu-latest

     steps:

       - name: Capture start date and time
         id: start_time
         run: echo "start_time=$(date -u)" >> $GITHUB_ENV
       
       - name: Add start time to build-vars.json
         run: |
           modified_json=$(echo '${{ github.event.inputs.BUILD_VARS_JSON }}' | jq '.buildstats += { "${{ github.event.repository.name }}-start": "${{ env.start_time }}" }' )
           BUILD_VARS_JSON=$(echo "$modified_json" | jq -c '.')
           echo "BUILD_VARS_JSON=$BUILD_VARS_JSON" >> $GITHUB_ENV
           
       - name: Get build vars from input file
         id: extract-build-vars
         run: |
           BUILD_OS=$(echo  "$BUILD_VARS_JSON" | jq -r '.buildstats.OS' )
           BUILD_BRANCH=$(echo  "$BUILD_VARS_JSON" | jq -r '.buildstats.BUILD_BRANCH' )
           BUILD_TYPE=$(echo  "$BUILD_VARS_JSON" | jq -r '.buildstats.BUILD_TYPE' )
           echo "BUILD_OS=$BUILD_OS" >> $GITHUB_ENV 
           echo "BUILD_BRANCH=$BUILD_BRANCH" >> $GITHUB_ENV
           echo "BUILD_TYPE=$BUILD_TYPE" >> $GITHUB_ENV
           echo "BUILD_OS=$BUILD_OS"
           echo "BUILD_BRANCHN=$BUILD_BRANCH"
           echo "BUILD_TYPE=$BUILD_TYPE"       
            
       - name: Check out Repo
         uses: actions/checkout@v4
         with:
           ref: ${{ env.BUILD_BRANCH }}

       - name: Delete current repo from build
         id: modify_json
         run: |
           modified_json=$(echo "$BUILD_VARS_JSON" | jq 'del(.repos[0])')
           BUILD_VARS_JSON=$(echo "$modified_json" | jq -c '.')
           echo "BUILD_VARS_JSON=$BUILD_VARS_JSON" >> $GITHUB_ENV
           echo "**** next next ****"
           echo "BUILD_VARS_JSON=$BUILD_VARS_JSON" 
          
       - name: Look up the next repo name to build
         id: extract_repo_name
         run: |
           echo "BUILD_VARS_JSON value is: $BUILD_VARS_JSON"
           NEXTREPO=$(echo  "$BUILD_VARS_JSON" | jq -r '.repos[0].name' )
           echo "NEXTREPO=$NEXTREPO" >> $GITHUB_ENV  

       - name: Add GitHub run ID to buildids
         id: add_run_id
         run: |
           GITHUB_RUN_ID=${{ github.run_id }}
           modified_json=$(echo "$BUILD_VARS_JSON" | jq --arg run_id "$GITHUB_RUN_ID" '.buildids."${{ github.event.repository.name }}" = $run_id')
           BUILD_VARS_JSON=$(echo "$modified_json" | jq -c '.')
           echo "BUILD_VARS_JSON=$BUILD_VARS_JSON" >> $GITHUB_ENV
            
       - name: Create a temporary artifact downloads folder
         run: mkdir aritfacts

       - name: run docker oneshot builder
         run: |
           echo " run the oneshot"
           curl -s https://raw.githubusercontent.com/perfsonar/docker-oneshot-builder/main/build | sh -s - . '${{ matrix.os }}'
 
       - uses: actions/upload-artifact@v4
         with:
            name: ${{ github.event.repository.name }}-${{ matrix.os }}
            path: unibuild-repo
            retention-days: 5

       - name: update build-vars.json
         run: |
           jq 'del(.repos[0])' build-vars.json > tmp.json
           mv tmp.json  build-vars.json
           jq --arg run_id "${{ github.run_id }}" '.buildids += { "minor-packages": $run_id }'  build-vars.json  > tmp.json
           mv tmp.json  build-vars.json
           
       - name: Extract repo name
         id: extract_repo_name
         run: |
            jq -r '.repos[0].name' build-vars.json
            NEXTREPO=$(jq -r '.repos[0].name' build-vars.json )
            echo "NEXTREPO=${NEXTREPO}" >> $GITHUB_ENV
            
       - name: Capture start end and time
         id: end_time
         run: echo "end_time=$(date -u)" >> $GITHUB_ENV

       - name: Add end time to build-vars.json
         run: |
            jq '.buildstats += {"${{ github.event.repository.name }}-end": "${{ env.end_time }}"}' build-vars.json > updated_build-vars.json
            mv updated_build-vars.json build-vars.json

       - name: Set build-vars.json as workflow variable
         id: set_build-vars
         run: |
           BUILD_VARS_JSON=$(jq -c . build-vars.json)
           echo "BUILD_VARS_JSON=${BUILD_VARS_JSON}" >> $GITHUB_ENV
           echo "BUILD_VARS_JSON=${BUILD_VARS_JSON}"
           
   #     - name: Pass Workflow
   #       if: env.BUILD_TYPE == 'FULL'
   #       uses: actions/github-script@v6
   #       with:
   #        github-token: ${{ secrets.GIT_ACTIONS }}
   #        script: |
   #          await github.rest.actions.createWorkflowDispatch({
   #            owner: 'cs1867',
   #            repo:  '${{ env.NEXTREPO}}',
   #            workflow_id: '${{ env.NEXTREPO }}-workflow.yml',
   #            ref: 'github-workflow',
   #           inputs: {
   #              BUILD_VARS_JSON: '${{ env.BUILD_VARS_JSON}}'
   #            }
   #          })
