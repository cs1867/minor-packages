# esmond_manage migrate
Traceback (most recent call last):
  File "esmond/manage.py", line 14, in <module>
    execute_from_command_line(sys.argv)
  File "/usr/lib/python2.7/dist-packages/django/core/management/__init__.py", line 367, in execute_from_command_line
    utility.execute()
  File "/usr/lib/python2.7/dist-packages/django/core/management/__init__.py", line 359, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/usr/lib/python2.7/dist-packages/django/core/management/base.py", line 294, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/usr/lib/python2.7/dist-packages/django/core/management/base.py", line 342, in execute
    self.check()
  File "/usr/lib/python2.7/dist-packages/django/core/management/base.py", line 374, in check
    include_deployment_checks=include_deployment_checks,
  File "/usr/lib/python2.7/dist-packages/django/core/management/commands/migrate.py", line 62, in _run_checks
    issues.extend(super(Command, self)._run_checks(**kwargs))
  File "/usr/lib/python2.7/dist-packages/django/core/management/base.py", line 361, in _run_checks
    return checks.run_checks(**kwargs)
  File "/usr/lib/python2.7/dist-packages/django/core/checks/registry.py", line 81, in run_checks
    new_errors = check(app_configs=app_configs)
  File "/usr/lib/python2.7/dist-packages/django/core/checks/urls.py", line 14, in check_url_config
    return check_resolver(resolver)
  File "/usr/lib/python2.7/dist-packages/django/core/checks/urls.py", line 24, in check_resolver
    for pattern in resolver.url_patterns:
  File "/usr/lib/python2.7/dist-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/lib/python2.7/dist-packages/django/urls/resolvers.py", line 313, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/usr/lib/python2.7/dist-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/lib/python2.7/dist-packages/django/urls/resolvers.py", line 306, in urlconf_module
    return import_module(self.urlconf_name)
  File "/usr/lib/python2.7/importlib/__init__.py", line 37, in import_module
    __import__(name)
  File "/usr/lib/python2.7/dist-packages/esmond/urls.py", line 8, in <module>
    from rest_framework_extensions.routers import ExtendedSimpleRouter
  File "/usr/lib/python2.7/dist-packages/rest_framework_extensions/routers.py", line 14, in <module>
    from rest_framework_extensions.utils import flatten, compose_parent_pk_kwarg_name
  File "/usr/lib/python2.7/dist-packages/rest_framework_extensions/utils.py", line 10, in <module>
    from rest_framework_extensions.key_constructor.constructors import (
  File "/usr/lib/python2.7/dist-packages/rest_framework_extensions/key_constructor/constructors.py", line 5, in <module>
    from rest_framework_extensions.key_constructor import bits
  File "/usr/lib/python2.7/dist-packages/rest_framework_extensions/key_constructor/bits.py", line 6, in <module>
    from rest_framework_extensions.compat import force_text
  File "/usr/lib/python2.7/dist-packages/rest_framework_extensions/compat.py", line 24, in <module>
    from django.conf.urls.defaults import patterns, url, include
ImportError: No module named defaults

--- a/rest_framework_extensions/compat.py
+++ b/rest_framework_extensions/compat.py
@@ -17,11 +17,11 @@
 except ImportError:
     from rest_framework import six
 
-# location of patterns, url, include changes in 1.4 onwards
+# location of url, include changes in 1.4 onwards
 try:
-    from django.conf.urls import patterns, url, include
+    from django.conf.urls import url, include
 except ImportError:
-    from django.conf.urls.defaults import patterns, url, include
+    from django.conf.urls.defaults import url, include
 
 # Handle django.utils.encoding rename:
 # smart_unicode -> smart_text
@@ -598,4 +598,4 @@
                              klass.__name__)
         klass.__unicode__ = klass.__str__
         klass.__str__ = lambda self: self.__unicode__().encode('utf-8')
-        return klass
\ No newline at end of file
+        return klass
