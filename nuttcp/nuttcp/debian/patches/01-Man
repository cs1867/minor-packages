Fix manpage so that it is lintian clean and sane.

Author: Chris Taylor <ctaylor@debian.org><
--- a/nuttcp.8
+++ b/nuttcp.8
@@ -7,11 +7,11 @@
 .ie \\n(.$-1 .RI "[\ \fB\\$1\fP" "\\$2" "\ ]"
 .el .RB "[\ " "\\$1" "\ ]"
 ..
-.B nuttcp -h
+.B nuttcp \-h
 .br
-.B nuttcp -V
+.B nuttcp \-V
 .br
-.B nuttcp -t
+.B nuttcp \-t
 .OP \-bdDsuv
 .OP \-c dscp_value
 .OP \-l buffer_len
@@ -38,7 +38,7 @@
 .I input
 ]
 .br
-.B nuttcp -r
+.B nuttcp \-r
 .OP \-bBdsuv
 .OP \-c dscp_value
 .OP \-l buffer_len
@@ -67,10 +67,10 @@
 .I output
 ]
 .br
-.B nuttcp -S
+.B nuttcp \-S
 .OP \-P control_port
 .br
-.B nuttcp -1
+.B nuttcp \-1
 .OP \-P control_port
 .ad
 .SH DESCRIPTION
@@ -103,21 +103,21 @@
 There are two basic modes of operation for nuttcp.  The original or
 classic mode is the transmitter/receiver mode, which is also the way
 the original ttcp and nttcp worked.  In this mode, a receiver is first
-initiated on the destination host using "nuttcp -r", and then a
-transmitter must be started on the source host using "nuttcp -t".
+initiated on the destination host using "nuttcp \-r", and then a
+transmitter must be started on the source host using "nuttcp \-t".
 This mode is somewhat deprecated and is no longer recommended for
 general use.  The preferred and recommended mode of operation for
 nuttcp is the new client/server mode.  With this mode, a server is
-first started on one system using "nuttcp -S" (or "nuttcp -1"),
-and then a client may either transmit data to (using "nuttcp -t")
-or receive data from (using "nuttcp -r") the server system.  All
+first started on one system using "nuttcp \-S" (or "nuttcp \-1"),
+and then a client may either transmit data to (using "nuttcp \-t")
+or receive data from (using "nuttcp \-r") the server system.  All
 the information provided by nuttcp is reported by the client, including
 the information from the server, thus providing a full snapshot of both
 the transmitter and receiver ends of the data transfer.
 .PP
 The server may be started by a normal, non-privileged user by issuing
-either a "nuttcp -S" or a "nuttcp -1" command.  However, the optimal
-and recommended method of running a server is to run "nuttcp -S" via
+either a "nuttcp \-S" or a "nuttcp \-1" command.  However, the optimal
+and recommended method of running a server is to run "nuttcp \-S" via
 the inetd/xinetd daemon.  This method has several significant advantages,
 including being more robust, allowing multiple simultaneous connections,
 and providing for access control over who is allowed to use the nuttcp
@@ -138,14 +138,14 @@
 (server).
 .PP
 Normally, a nuttcp data transfer is memory-to-memory.  However, by
-using the "-s" option, it is possible to also perform memory-to-disk,
-disk-to-memory, and disk-to-disk data transfers.  Using the "-s" option
+using the "\-s" option, it is possible to also perform memory-to-disk,
+disk-to-memory, and disk-to-disk data transfers.  Using the "\-s" option
 with the transmitter will cause nuttcp to read its data from the
 standard input instead of using a prefabricated memory buffer,
-while using the "-s" option on the receiver causes nuttcp to write
+while using the "\-s" option on the receiver causes nuttcp to write
 its data to standard output.  All these types of data transfers are
 possible with the classic transmitter/receiver mode.  For security
-reasons, the "-s" option is disabled on the server, so it is not
+reasons, the "\-s" option is disabled on the server, so it is not
 possible to access the disk on the server side of a data transfer.
 .PP
 The allowed options to nuttcp are:
@@ -157,7 +157,7 @@
 .TP
 .B \-V
 Prints the nuttcp version number.  The nuttcp version is also printed
-as part of the normal nuttcp output when the "-v" verbose output is
+as part of the normal nuttcp output when the "\-v" verbose output is
 used (but not when using the default brief output).  In client/server
 mode, the version number of both the client and server is identified.
 .TP
@@ -175,7 +175,7 @@
 .TP
 .B \-S
 Indicates that this nuttcp is the server.  The only option that may
-be specified to the server is the "-P" option, which allows one to
+be specified to the server is the "\-P" option, which allows one to
 change the control port used by the server, but only when the server
 is started by a normal, non-privileged user.  When the server is
 initiated by inetd/xinetd, the server control port should be specified
@@ -184,13 +184,13 @@
 file.
 .TP
 .B \-1
-Basically the same as the "-S" option, but indicates a one-shot server,
+Basically the same as the "\-S" option, but indicates a one-shot server,
 i.e. the server exits after the first data transfer initiated by a
-client.  The "-1" option should only be used when the server is started
+client.  The "\-1" option should only be used when the server is started
 by a normal, non-privileged user.  This option will probably rarely
 need to be used, but can be useful for a quick test and eliminates
 the possibilty of leaving a non-access controlled nuttcp server running
-on the system (which can happen when using the "-S" option and forgetting
+on the system (which can happen when using the "\-S" option and forgetting
 to kill the nuttcp server after finishing a series of tests).
 .TP
 .B \-b
@@ -204,11 +204,11 @@
 .TP
 .B \-B
 This option is only valid for the receiver, and forces the receiver
-to read a full buffer (as specified by the "-l" buffer length option)
-from the network.  It is mainly intended to be used with the "-s"
+to read a full buffer (as specified by the "\-l" buffer length option)
+from the network.  It is mainly intended to be used with the "\-s"
 option to only output full buffers to standard output (e.g. for use
 with tar).  It is also implicitly set whenever the number of streams
-as specified by the "-N" option is greater than 1.  This option is
+as specified by the "\-N" option is greater than 1.  This option is
 not passed to the server.
 .TP
 .B \-d
@@ -225,10 +225,10 @@
 which may possibly be removed or renamed in a future version of nuttcp.
 .TP
 .B \-s
-Setting the "-s" option causes nuttcp to either read its data from
+Setting the "\-s" option causes nuttcp to either read its data from
 standard input rather than using prefabricated memory buffers (for
-"nuttcp -t"), or to write its data out to standard output (for
-"nuttcp -r").  The "-s" option is disabled for security reasons
+"nuttcp \-t"), or to write its data out to standard output (for
+"nuttcp \-r").  The "\-s" option is disabled for security reasons
 on the server.
 .TP
 .B \-u
@@ -237,8 +237,8 @@
 .B \-v
 Verbose output that provides some additional information related to
 the data transfer.  In client/server mode, the server is always verbose
-(implicit "-v" option), but the client controls the extent and type of
-output via the "-v" and "-b" options.
+(implicit "\-v" option), but the client controls the extent and type of
+output via the "\-v" and "\-b" options.
 .TP
 .BI \-c dscp_value
 Sets the socket option to support COS.  Either takes a dscp value or
@@ -253,14 +253,14 @@
 .BI \-n num_bufs
 Specifies the number of source buffers written to the network
 (default is unlimited), and is ignored by the receiver.  For client/server
-mode, if the client issues a "nuttcp -r" command making it the
+mode, if the client issues a "nuttcp \-r" command making it the
 receiver, this parameter is passed to the server since the server
 is the transmitter in this case.  This parameter is also ignored
-if the "-s" parameter is specified to the transmitter.
+if the "\-s" parameter is specified to the transmitter.
 .TP
 .BI \-w window_size
-Indicates the window size in KB of the transmitter (for "nuttcp -t")
-or receiver (for "nuttcp -r").  Actually, to be technically correct,
+Indicates the window size in KB of the transmitter (for "nuttcp \-t")
+or receiver (for "nuttcp \-r").  Actually, to be technically correct,
 it sets the sender or receiver TCP socket buffer size, which then
 effectively sets the window size.  For client/server mode, both the
 transmitter and receiver window sizes are set.  The default window
@@ -273,14 +273,14 @@
 but less than the doubled value set by Linux.
 .TP
 .BI \-ws server_window
-For client/server mode, the "-ws" option provides a mechanism for
+For client/server mode, the "\-ws" option provides a mechanism for
 setting a different window size on the server than the client window
-size as specified with the "-w" option.
+size as specified with the "\-w" option.
 .TP
 .B \-wb
 Normally, to conserve memory, the transmitter only sets the TCP send
 socket buffer size and the receiver only sets the TCP receive socket
-buffer size.  However, if the "-wb" option is used, the transmitter
+buffer size.  However, if the "\-wb" option is used, the transmitter
 will also set the TCP receive socket buffer size and the receiver will
 also set the TCP send socket buffer size.  Under normal circumstances,
 this should never be necessary.  This option was implemented because
@@ -291,7 +291,7 @@
 .TP
 .BI \-p data_port
 Port number used for the data connection, which defaults to port 5001.
-If multiple streams are specified with the "-N" option, the "-p" option
+If multiple streams are specified with the "\-N" option, the "\-p" option
 specifies the starting port number for the data connection.  For example,
 if four streams are specified using the default data connection port
 number, nuttcp will use ports 5001, 5002, 5003, and 5004 for the four
@@ -300,7 +300,7 @@
 .BI \-P control_port
 For client/server mode, specifies the port number used for the control
 connection between the client and server, and defaults to port 5000.
-On the server side, the "-P" option should only be used when the server
+On the server side, the "\-P" option should only be used when the server
 is started manually by the user.  If the server is started by inetd/xinetd
 (the preferred method), the control connection must be specified by adding
 a nuttcp entry to the
@@ -311,7 +311,7 @@
 Species the number of parallel TCP (or UDP) data streams to be used for
 the data transfer, with the default being a single data stream.  The
 maximum number of parallel data streams that can be used is 128.  If the
-number of streams is greater than one, the "-B" option is implicitly set.
+number of streams is greater than one, the "\-B" option is implicitly set.
 The current implementation does not fork off separate processes for each
 data stream, so specifying multiple streams on an SMP machine will not
 take advantage of its multiple processors.  Of course it is always possible
@@ -319,7 +319,7 @@
 if there is any advantage to running on multiple processors.  This is
 especially simple to do when running in client/server mode when the server
 is started from the inetd/xinetd daemon.  When running multiple nuttcp
-commands in parallel, the "-T" transmitter timeout option may be used
+commands in parallel, the "\-T" transmitter timeout option may be used
 to insure that all the nuttcp commands finish at approximately the same
 time.
 .TP
@@ -335,7 +335,7 @@
 time, so if nuttcp is switched out of the processor for any reason, when
 it is switched back in, it is possible that the instantaneous rate may
 momentarily exceed the specified value.  There is an 'i' qualifier to
-the rate limit option (specified as "-Ri") that will restrict the
+the rate limit option (specified as "\-Ri") that will restrict the
 instantaneous rate at any given point in time to the specified value,
 although in this case the final rate reported by nuttcp may be less
 than the specified value since nuttcp won't attempt to catch up if other
@@ -347,8 +347,8 @@
 Limits the amount of time that the transmitter will send data to the
 specified number of seconds, or number of minutes if the 'm' suffix
 is used.  Normally a data transfer will either specify a fixed amount
-of data to send using the "-n" option, or a fixed period of time to
-send using the "-T" option.  However, if both the "-n" and "-T" options
+of data to send using the "\-n" option, or a fixed period of time to
+send using the "\-T" option.  However, if both the "\-n" and "\-T" options
 are used, the data transfer will be stopped by whichever option takes
 affect first.  The default is a 10 second time limit for the data
 transfer.
