commit bd40ad345ca9a4aacb71b5d9bd57247f67d40377
Author: Florian Apolloner <florian@apolloner.eu>
Date:   Mon Jul 15 12:00:06 2019 +0200

    [1.11.x] Fixed CVE-2019-14233 -- Prevented excessive HTMLParser recursion in strip_tags() when handling incomplete HTML entities.
    
    Thanks to Guido Vranken for initial report.

diff --git a/django/utils/html.py b/django/utils/html.py
index 9c38cde55d..30a6a2f0c8 100644
--- a/django/utils/html.py
+++ b/django/utils/html.py
@@ -169,8 +169,8 @@ def strip_tags(value):
     value = force_text(value)
     while '<' in value and '>' in value:
         new_value = _strip_once(value)
-        if len(new_value) >= len(value):
-            # _strip_once was not able to detect more tags or length increased
+        if len(new_value) >= len(value) or value.count('<') == new_value.count('<'):
+            # _strip_once wasn't able to detect more tags, or line length increased.
             # due to http://bugs.python.org/issue20288
             # (affects Python 2 < 2.7.7 and Python 3 < 3.3.5)
             break
#diff --git a/docs/releases/1.11.23.txt b/docs/releases/1.11.23.txt
#index 9a3ab7cbc9..2a16604fcc 100644
#--- a/docs/releases/1.11.23.txt
#+++ b/docs/releases/1.11.23.txt
#@@ -5,3 +5,20 @@ Django 1.11.23 release notes
# *August 1, 2019*
# 
# Django 1.11.23 fixes security issues in 1.11.22.
#+
#+CVE-2019-14233: Denial-of-service possibility in ``strip_tags()``
#+=================================================================
#+
#+Due to the behavior of the underlying ``HTMLParser``,
#+:func:`django.utils.html.strip_tags` would be extremely slow to evaluate
#+certain inputs containing large sequences of nested incomplete HTML entities.
#+The ``strip_tags()`` method is used to implement the corresponding
#+:tfilter:`striptags` template filter, which was thus also vulnerable.
#+
#+``strip_tags()`` now avoids recursive calls to ``HTMLParser`` when progress
#+removing tags, but necessarily incomplete HTML entities, stops being made.
#+
#+Remember that absolutely NO guarantee is provided about the results of
#+``strip_tags()`` being HTML safe. So NEVER mark safe the result of a
#+``strip_tags()`` call without escaping it first, for example with
#+:func:`django.utils.html.escape`.
diff --git a/tests/utils_tests/test_html.py b/tests/utils_tests/test_html.py
index 1bebe94521..6122b695f3 100644
--- a/tests/utils_tests/test_html.py
+++ b/tests/utils_tests/test_html.py
@@ -86,6 +86,8 @@ class TestUtilsHtml(SimpleTestCase):
             # caused infinite loop on Pythons not patched with
             # http://bugs.python.org/issue20288
             ('&gotcha&#;<>', '&gotcha&#;<>'),
+            ('><!' + ('&' * 16000) + 'D', '><!' + ('&' * 16000) + 'D'),
+            ('X<<<<br>br>br>br>X', 'XX'),
         )
         for value, output in items:
             self.check_output(f, value, output)
